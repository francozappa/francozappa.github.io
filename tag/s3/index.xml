<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>s3 | Daniele Antonioli</title>
    <link>https://francozappa.github.io/tag/s3/</link>
      <atom:link href="https://francozappa.github.io/tag/s3/index.xml" rel="self" type="application/rss+xml" />
    <description>s3</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2022 Daniele Antonioli</copyright><lastBuildDate>Tue, 21 Nov 2017 14:28:36 +0800</lastBuildDate>
    <image>
      <url>https://francozappa.github.io/media/icon_hufd6449924b8771808a89b636be1cd7b0_295644_512x512_fill_lanczos_center_3.png</url>
      <title>s3</title>
      <link>https://francozappa.github.io/tag/s3/</link>
    </image>
    
    <item>
      <title>S317: MiniCPS Challenges</title>
      <link>https://francozappa.github.io/post/2017/minicps-s3-code/</link>
      <pubDate>Tue, 21 Nov 2017 14:28:36 +0800</pubDate>
      <guid>https://francozappa.github.io/post/2017/minicps-s3-code/</guid>
      <description>&lt;p&gt;I recently open-sourced the code that I developed for the MiniCPS challenges
for the SWaT Security Showdown (S3) event in 2017.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/scy-phy/minicps/tree/master/examples/s3-2017&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here&lt;/a&gt; is the code.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;init.sh&lt;/code&gt; contains the list of commands that I run on a local testing
machine and on the remote AWS instances that we used during the event.
The attackers were provided with the VPN credentials to
access two different subnetworks in a &lt;em&gt;mixed&lt;/em&gt; MiniCPS simulation eg:
water treatment (SWaT) and water distribution (WaDI).&lt;/p&gt;
&lt;p&gt;The code is expecting to find the four files (flags) in the &lt;code&gt;/root/flags&lt;/code&gt;
folder named &lt;code&gt;wadi1&lt;/code&gt;, &lt;code&gt;wadi2&lt;/code&gt;, &lt;code&gt;flag2&lt;/code&gt;, and &lt;code&gt;flag3&lt;/code&gt;. Indeed you have to create
those files and write the string flags.&lt;/p&gt;
&lt;p&gt;The relevant information to start and stop the challenges are in the
&lt;code&gt;README.md&lt;/code&gt;. In general, I like to use a &lt;code&gt;Makefile&lt;/code&gt; as a launcher for the various
commands. If you open the file, you will find several targets. To test the
challenges locally use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Please let me know if you find any bugs or missing files.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
