<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recent &amp; Upcoming Talks | Daniele Antonioli</title>
    <link>https://francozappa.github.io/event/</link>
      <atom:link href="https://francozappa.github.io/event/index.xml" rel="self" type="application/rss+xml" />
    <description>Recent &amp; Upcoming Talks</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2024 Daniele Antonioli</copyright><lastBuildDate>Mon, 08 Jan 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://francozappa.github.io/media/icon_hufd6449924b8771808a89b636be1cd7b0_295644_512x512_fill_lanczos_center_3.png</url>
      <title>Recent &amp; Upcoming Talks</title>
      <link>https://francozappa.github.io/event/</link>
    </image>
    
    <item>
      <title>Bluetooth Security at NECS Winter School</title>
      <link>https://francozappa.github.io/talk/bluetooth-security-at-necs-winter-school/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/bluetooth-security-at-necs-winter-school/</guid>
      <description>&lt;p&gt;This lecture overviews recent and impactful research on Bluetooth
security and privacy. We will cover protocol-level vulnerabilities in
the Bluetooth specification affecting billions of devices, such as KNOB,
BIAS, BLUR, and BLUFFS.&lt;/p&gt;
&lt;p&gt;Moreover, we will explore works about insecure
and proprietary protocols built on Bluetooth, including BreakMi
exploiting Xiaomi and Fitbit fitness tracker protocols and E-Spoofer
compromising  Xiaomi&amp;rsquo;s electric scooter protocols.&lt;/p&gt;
&lt;p&gt;While presenting our research works, we will also teach basic and
advanced concepts about the security and privacy of IoT protocols.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BLUFFS: Breaking and fixing the Bluetooth standard. One More Time.</title>
      <link>https://francozappa.github.io/talk/bluffs-breaking-and-fixing-the-bluetooth-standard.-one-more-time./</link>
      <pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/bluffs-breaking-and-fixing-the-bluetooth-standard.-one-more-time./</guid>
      <description>&lt;iframe width=&#34;512&#34; height=&#34;288&#34;
src=&#34;https://media.ccc.de/v/37c3-12342-bluffs_bluetooth_forward_and_future_secrecy_attacks_and_defenses/oembed&#34;
frameborder=&#34;0&#34; title=&#34;BLUFFS&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Ciao! We present the BLUFFS attacks (CVE-2023-24023), six novel attacks
breaking Bluetooth&amp;rsquo;s forward and future secrecy. Our attacks enable device
impersonation and machine-in-the-middle across sessions by compromising and
re-using one session key. We discuss the four vulnerabilities in the Bluetooth
specification enabling the attacks, two of which are new and related to
unilateral and repeatable session key derivation. We describe the toolkit we
developed and open-sourced to test our attacks via firmware binary patching,
our experiments where we exploited 18 heterogeneous Bluetooth devices, and the
practical and backward-compliant session key derivation protocol we built to
fix the attacks by design. We also cover related work like KNOB, BIAS, and
BLUR, and educational Bluetooth security tips and tricks.&lt;/p&gt;
&lt;p&gt;Bluetooth is a pervasive technology for wireless communication.
Billions of devices use it in sensitive applications and to exchange
private data. The security of Bluetooth depends on the Bluetooth
standard and its two security mechanisms: pairing and session establishment.
No prior work, including the standard itself, analyzed the future and forward
secrecy guarantees of these mechanisms, e.g., if Bluetooth pairing and session
establishment defend past
and future sessions when the adversary compromises the current.
To address this gap, we present six novel attacks, defined as the
BLUFFS attacks, breaking Bluetooth sessions’ forward and future
secrecy. Our attacks enable device impersonation and machine-in-the-middle
across sessions by only compromising one session key. The attacks exploit two
novel vulnerabilities that we uncover in the Bluetooth standard related to
unilateral and repeatable session key derivation. As the attacks affect
Bluetooth at the architectural level, they are effective regardless of the
victim’s hardware and software details (e.g., chip, stack, version, and
security mode).&lt;/p&gt;
&lt;p&gt;We also release BLUFFS, a low-cost toolkit to perform and automatically check
the effectiveness of our attacks. The toolkit employs seven original patches
to manipulate and monitor Bluetooth session key derivation by dynamically
patching a closed-source Bluetooth firmware that we reverse-engineered. We
show that our attacks have a critical and large-scale impact on the Bluetooth
ecosystem, by evaluating them on seventeen diverse Bluetooth chips (eighteen
devices) from popular hardware and software vendors and supporting the most
popular Bluetooth versions. Motivated by our empirical findings, we develop
and successfully test an enhanced key derivation function for Bluetooth that
stops by-design our six attacks and their four root causes. We show how to
effectively integrate our fix into the Bluetooth standard and discuss
alternative implementation-level mitigations. We responsibly disclosed our
contributions to the Bluetooth SIG.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetooth Security and the KNOB Attack on BLE</title>
      <link>https://francozappa.github.io/talk/bluetooth-security-and-the-knob-attack-on-ble/</link>
      <pubDate>Tue, 04 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/bluetooth-security-and-the-knob-attack-on-ble/</guid>
      <description>&lt;p&gt;In this lecture we cover an Introduction about Bluetooth security, its main
transports (BC, BLE), procedures (discovery, connect) and logical entities
(Host, Controller, HCI). Then we look at Bluetooth security architecture and
the specific BC/BLE algorithms and protocols. We conclude by talking about
state of the art attacks that we developed against this protocols including
KNOB, BIAS, and BLUR.&lt;/p&gt;
&lt;p&gt;In this lab we cover an Introduction about Bluetooth security, its main
transports (BC, BLE), procedures (discovery, connect) and logical entities
(Host, Controller, HCI). Then we look at Bluetooth security architecture and
the specific BC/BLE algorithms and protocols. We conclude by talking about
state of the art attacks that we developed against this protocols including
KNOB, BIAS, and BLUR&lt;/p&gt;
&lt;p&gt;Summer school program
&lt;a href=&#34;https://www.s3.eurecom.fr/~aurel/summer-school-2023/program/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BreakMi: Reversing, Exploiting and Fixing Xiaomi (and Fitbit) Fitness Tracking Ecosystems</title>
      <link>https://francozappa.github.io/talk/breakmi-reversing-exploiting-and-fixing-xiaomi-and-fitbit-fitness-tracking-ecosystems/</link>
      <pubDate>Sat, 03 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/breakmi-reversing-exploiting-and-fixing-xiaomi-and-fitbit-fitness-tracking-ecosystems/</guid>
      <description>
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/MeLeg1sVmss&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Xiaomi is the leading company in the fitness tracking industry. Successful
attacks on its fitness tracking ecosystem would result in severe consequences,
including the loss of sensitive health and personal data. Despite these
relevant risks, we know very little about the security mechanisms adopted by
Xiaomi. In this work, we uncover them and show that they are insecure. In
particular, Xiaomi protects its fitness tracking ecosystem with custom
application-layer protocols spoken over insecure Bluetooth Low-Energy (BLE)
connections (ignoring standard BLE security mechanisms already supported by
their devices) and TLS connections. We identify severe vulnerabilities
affecting such proprietary protocols, including unilateral and replayable
authentication.&lt;/p&gt;
&lt;p&gt;Those issues are critical as they affect all Xiaomi trackers released since
2016 and up-to-date Xiaomi companion apps for Android and iOS. We show in
practice how to exploit the identified vulnerabilities by presenting six
impactful attacks. Four attacks enable to wirelessly impersonate any Xiaomi
fitness tracker and companion app, man-in-the-middle (MitM) them, and
eavesdrop on their communication. The other two attacks leverage a malicious
Android application to remotely eavesdrop on data from a tracker and
impersonate a Xiaomi fitness app.&lt;/p&gt;
&lt;p&gt;Overall, the attacks have a high impact as they can be used to exfiltrate and
inject sensitive data from any Xiaomi tracker and compatible app. We propose
five practical and low-overhead countermeasures to mitigate the presented
vulnerabilities. Moreover, we present BreakMi, a modular toolkit that we
developed to automate our reverse-engineering process and attacks. breakmi
understands Xiaomi application-layer proprietary protocols, reimplements
Xiaomi security mechanisms, and automatically performs our attacks. We
demonstrate that our toolkit can be generalized by extending it to be
compatible with the Fitbit ecosystem. We will open-source BreakMi.&lt;/p&gt;
&lt;p&gt;More &lt;a href=&#34;https://hardwear.io/usa-2023/speakers/marco-and-daniele.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the (In)securities of Popular Standard and Proprietary Wireless Protocols</title>
      <link>https://francozappa.github.io/talk/on-the-insecurities-of-popular-standard-and-proprietary-wireless-protocols/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/on-the-insecurities-of-popular-standard-and-proprietary-wireless-protocols/</guid>
      <description>&lt;p&gt;This talk covers our recent research on the (in)securities of
proprietary and standard wireless security protocols used daily by
millions of devices and users. In particular, I will cover the BLUR
attacks on Bluetooth, a novel class of threats capable of exploiting
Bluetooth Classic from Bluetooth Low Energy and vice versa. Then, I
will report on our security evaluation of protocol-level Bluetooth
threats on vehicles (i.e., cars), a currently unexplored by impactful
attack surface. Next, I will shift to proprietary wireless protocols
and describe our security assessments of Xiaomi and Fitbit fitness
trackers&amp;rsquo; proprietary protocols. Finally, I will conclude by covering
our latest work on custom Xiaomi e-scooters&amp;rsquo; wireless protocols.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the Insecurity of Vehicles Against Protocol-Level Bluetooth Threats</title>
      <link>https://francozappa.github.io/talk/on-the-insecurity-of-vehicles-against-protocol-level-bluetooth-threats/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/on-the-insecurity-of-vehicles-against-protocol-level-bluetooth-threats/</guid>
      <description>&lt;p&gt;In this webinar we talk about, Protocol-Level Bluetooth Threats (PLBT), a novel
and relevant class of threats for automotive security. Specifically, we
explain what they are, why they are relevant, and how they can be evaluated on
modern cars. We also report our PLBT evaluation results on five popular
In-Vehicle Infotainment (IVI) units used by KIA, Toyota, Suzuki, and Skoda on
cars manufactured between 2014 and 2021. For example, we show that is trivial
to impersonate a trusted smartphone to commercial IVIs using an attack chain
that we developed in recent years (KNOB+BIAS attacks). As a result of a
successful impersonation, an attacker can exfiltrate sensitive data stored on
the IVI and send malicious commands to the IVI without being detected.&lt;/p&gt;
&lt;p&gt;We note that PLBTs are effective on any Bluetooth-enabled IVI as they exploit
protocol flaws in the Bluetooth standard itself. Hence, we expect that the
vast majority of the IVIs in the market is vulnerable to the KNOB+BIAS attack
chain and other PLBTs. This fact should clearly motivate why it is important
to investigate and fix PLBTs in the automotive industry.&lt;/p&gt;
&lt;p&gt;For more information please refer to our research paper presented this year at
the IEEE &lt;em&gt;Workshop On Offensive Technologies (WOOT)&lt;/em&gt; titled &lt;strong&gt;On the Insecurity
of Vehicles Against Protocol-Level Bluetooth Threats&lt;/strong&gt; available
&lt;a href=&#34;https://hexhive.epfl.ch/publications/files/22WOOT.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/tqln99BHUzU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>C.A.S.E., il futuro dell&#39;auto: opportunità e rischi</title>
      <link>https://francozappa.github.io/talk/c.a.s.e.-il-futuro-dellauto-opportunita-e-rischi/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/c.a.s.e.-il-futuro-dellauto-opportunita-e-rischi/</guid>
      <description>&lt;p&gt;More information about the speech on
&lt;a href=&#34;https://www.quattroruote.it/news/aziende/2022/06/29/f_b_day_c_a_s_e_il_futuro_dell_auto_opportunita_e_rischi_al_nostro_evento.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;quattroruote.it&lt;/a&gt; and
&lt;a href=&#34;https://www.linkedin.com/pulse/case-il-futuro-dellauto-opportunit%25C3%25A0-e-rischi-al-fb-day-alberto-vita/?trackingId=cf50jgiplD79C8j7OOr7Sw%3D%3D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;linkedin pulse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;More information about the event &lt;a href=&#34;https://fleet-businessday.quattroruote.it/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploiting and Fixing the Bluetooth Standard</title>
      <link>https://francozappa.github.io/talk/exploiting-and-fixing-the-bluetooth-standard/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/exploiting-and-fixing-the-bluetooth-standard/</guid>
      <description>&lt;p&gt;Bluetooth is a ubiquitous technology for low-power wireless
communications. It is employed by billions of devices, including
smartphones, laptops, wearables, and cars. As a technology, Bluetooth is
specified in an open and quite complex standard. The standard defines
two Bluetooth flavors; &lt;em&gt;Bluetooth Classic (BC)&lt;/em&gt; for high
throughput services and &lt;em&gt;Bluetooth Low Energy (BLE)&lt;/em&gt; for low power
ones. In addition, it specifies pairing (i.e., bootstrapping) and
session establishment security mechanisms to protect the
confidentiality, integrity, and authenticity of Bluetooth communication.
One vulnerability in these mechanisms can be exploited on &lt;em&gt;all&lt;/em&gt;
Bluetooth devices as they must be compliant with the Bluetooth standard.&lt;/p&gt;
&lt;p&gt;This talk revisits our recent work about uncovering,
exploiting, and fixing three critical vulnerabilities in the Bluetooth
standard affecting BT and BLE. The vulns are KNOB (CVE-2019-9506), BIAS
(CVE-2020-10135), and BLUR (CVE-2020-15802). KNOB affects both BT and
BLE and enables to weaken and brute force Bluetooth&amp;rsquo;s cryptographic
keys. BIAS affects BT and allows to bypass Bluetooth&amp;rsquo;s authentication.
BLUR exploits the boundary between BT and BLE and results in
cross-transport exploitation of BT and BLE. Despite our reports to the
Bluetooth consortium (SIG), the presented vulnerabilities are either not
patched or partially fixed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking and Fixing the Bluetooth Standard</title>
      <link>https://francozappa.github.io/talk/breaking-and-fixing-the-bluetooth-standard/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/breaking-and-fixing-the-bluetooth-standard/</guid>
      <description>&lt;p&gt;Bluetooth is a ubiquitous technology for low-power wireless
communications employed by billions of devices, including mobiles,
wearables, and cars. Bluetooth is specified in a complex yet open
standard that defines two transports: &lt;em&gt;Bluetooth Classic (BC)&lt;/em&gt; for high
throughput services and &lt;em&gt;Bluetooth Low Energy (BLE)&lt;/em&gt; for very low power
services. Being a pervasive technology, Bluetooth exposes a broad attack
surface. Moreover, successful attacks on Bluetooth can achieve
high-impact goals, such as identity thefts, privacy violations, and
malicious device control.
The security of Bluetooth communication heavily depends on the
&lt;em&gt;Bluetooth standard&lt;/em&gt;, which defines &amp;ldquo;standard-compliant&amp;rdquo; security
mechanisms to protect the confidentiality, integrity, and availability
of Bluetooth communications.
Those mechanisms include &lt;em&gt;pairing&lt;/em&gt; and &lt;em&gt;secure session establishment&lt;/em&gt;
protocols used to establish keys and protect the communication.&lt;/p&gt;
&lt;p&gt;This talk revisits our recent work about uncovering,
exploring, and fixing three critical vulnerabilities in the Bluetooth
standard. The vulnerabilities affect both BC and BLE, and we named them.
KNOB (CVE-2019-9506), BIAS (CVE-2020-10135) and BLUR (CVE-2020-15802).
As these vulnerabilities are &lt;em&gt;standard-compliant&lt;/em&gt; (i.e., exploit
specification flaws in the Bluetooth standard), they are effective on
any Bluetooth device regardless of its hardware and software details.
For example, in our experiments, we successfully exploited KNOB, BIAS,
and BLUR on a broad set of devices, including Apple, Broadcom, Cypress,
CSR, Google, Intel, Microsoft,
and Qualcomm. Additionally, we successfully targeted all the major
Bluetooth versions currently in the market (e.g., 4.0, 4.1, 4.2, 5.0, 5.1,
and 5.2).&lt;/p&gt;
&lt;p&gt;Despite our reports to the Bluetooth consortium, the presented vulnerabilities
are either not patched or partially fixed. Indeed, more work has to be done to
secure the Bluetooth standard from its foundations.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why is Hard to Secure Mobile Proximity Services</title>
      <link>https://francozappa.github.io/talk/why-is-hard-to-secure-mobile-proximity-services/</link>
      <pubDate>Thu, 24 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/why-is-hard-to-secure-mobile-proximity-services/</guid>
      <description>&lt;p&gt;Mobile devices such as phones, tablets, and wearables enable proximity
services on a large scale. These services use wireless technologies (such as
Wi-Fi and Bluetooth) to connect users within a specific range and exchange
information. Proximity information ranges from general-purpose files and
contacts to privacy-preserving COVID-19 proximity identifiers. Since these
services affect millions of mobile users worldwide, their security against
cyber threats is paramount. It is not pleasant if an attacker in proximity
(or even remotely) can eavesdrop on private communication or tamper with
personal data. However, adopting (even essential) security mechanisms for
proximity services is easy in theory but pretty hard in practice. For example,
it is challenging to provide confidentiality and authenticity while at the
same time provide energy-efficient and accurate proximity tracing. On top
of that, a usable proximity service has to scale well with the number of
users and provide the same quality of services across different software and
hardware ecosystems (e.g., Android and iOS) and usage condition (e.g., indoor
and outdoor). In this talk, we look at two commercial proximity services.
First, Google&amp;rsquo;s Nearby Connections (NC) is an API to connect Android devices
using a combination of Wi-Fi and Bluetooth and without requiring an Internet
connection. Second, Google/Apple&amp;rsquo;s Exposure Notification (EN) framework.
EN powers most COVID-19 contact-tracing mobile applications in Europe,
including the ones used in Italy, Germany, and Switzerland. Throughout the
talk, the audience will learn, among others, real-world proximity services&#39;
architectures, pitfalls, vulnerabilities, attacks, countermeasures, and
related research trends.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BIAS and KNOB attacks against Bluetooth BR/EDR/LE</title>
      <link>https://francozappa.github.io/talk/bias-and-knob-attacks-against-bluetooth-br/edr/le/</link>
      <pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/bias-and-knob-attacks-against-bluetooth-br/edr/le/</guid>
      <description>&lt;p&gt;Bluetooth is a ubiquitous technology for low power wireless communications.  Bluetooth runs on billions of devices including mobile, wearables, home automation, smart speakers, headsets, industrial and medical appliances, and vehicles. As a result, Bluetooth&amp;rsquo;s attack surface is huge and includes significant threats such as identity thefts, privacy violations, and malicious device control. Bluetooth is a complex technology specified in an open standard. The standard defines two wireless stacks Bluetooth Classic for high throughput services (e.g., audio and voice) and Bluetooth Low Energy (BLE) for very low power services (e.g., localization, and monitoring). The standard defines security mechanisms to protect the confidentiality, integrity, and authenticity of Bluetooth communications. Those mechanisms include pairing to share a long term key among two devices, and secure session establishment to let two paired devices negotiate session keys to protect their communication. A single vulnerability in a standard-compliant security mechanism translates into billions of exploitable devices. This talk reviews several standard-compliant vulnerabilities that we recently uncovered on the key negotiation and authentication mechanisms of Bluetooth Classic and BLE. We also describe how to exploit such vulnerabilities to perform key negotiation attacks on Bluetooth Classic and BLE (KNOB attacks, CVE-2019-9506) and impersonation attacks on Bluetooth Classic (BIAS attacks, CVE-2020-10135). The attacks are presented together with a detailed description of the Bluetooth treat model and the affected security mechanism.  We also explain how we implemented such attacks using low-cost hardware and open-source software and how we evaluated them on actual devices from the major vendors including Apple, Broadcom, Cypress, CSR, Google, Intel, Microsoft, and Qualcomm. Finally, we describe how the Bluetooth standard was amended after the disclosure of our attacks, our proposed countermeasures, and why most of the Bluetooth devices are still vulnerable to our attacks.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2Sx-81wz9LA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>From the Bluetooth Standard to Standard-Compliant 0-days</title>
      <link>https://francozappa.github.io/talk/from-the-bluetooth-standard-to-standard-compliant-0-days/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/from-the-bluetooth-standard-to-standard-compliant-0-days/</guid>
      <description>&lt;p&gt;Bluetooth is a ubiquitous technology for low power wireless communications.
Bluetooth runs on billions of devices, including mobile, wearables, home
automation, smart speakers, headsets, industrial and medical appliances,
and vehicles. As a result, Bluetooth&amp;rsquo;s attack surface is huge and includes
significant threats such as identity thefts, privacy violations, and malicious
device control.&lt;/p&gt;
&lt;p&gt;Bluetooth is a complex technology specified in an open standard. The standard
defines two wireless stacks Bluetooth &amp;ldquo;classic&amp;rdquo; BR/EDR for high throughput
services (e.g., audio and voice) and Bluetooth Low Energy (BLE) for very low
power services (e.g., localization, and monitoring). The standard defines
security mechanisms to protect Bluetooth communications. Those mechanisms
include pairing to share a long term key among two devices, and secure
session establishment to let two paired devices negotiate session keys. It is
paramount that those standard security mechanisms provide security guarantees
that they promise, such as confidentiality, authenticity, and integrity of
data. A single vulnerability in a standard security mechanism translates into
billions of exploitable devices.&lt;/p&gt;
&lt;p&gt;This talk describes how we managed to find and exploit standard-compliant
0-days in the Bluetooth standard. We describe, in detail, the Bluetooth
security architecture, including its main components (Host, Controller) and
protocols (HCI, LMP, and SMP). Then we talk about the Key Negotiation of
Bluetooth (KNOB) attack on Bluetooth &amp;ldquo;classic&amp;rdquo; BR/EDR [CVE-2019-9506] and its
extension to BLE. The KNOB attacks are enabled by standard-compliant 0-days
in the key negotiation protocols of Bluetooth &amp;ldquo;classic&amp;rdquo; BR/EDR and BLE. In
particular, those protocols allow to negotiate keys with very low entropy
(strength), and they do not protect the integrity of entropy negotiation.
Using the KNOB attack, a man-in-the-middle attacker can force a Bluetooth
&amp;ldquo;classic&amp;rdquo; BR/EDR session key to 1 byte of entropy, and a BLE long term key to
7 bytes of entropy. Such low entropy values are unacceptable in 2020 and can
easily (for BLE) or trivially (for BR/EDR) be brute-forced.&lt;/p&gt;
&lt;p&gt;As a result of our attacks, a remote attacker gets access to private data and
inserts valid malicious data on Bluetooth &amp;ldquo;classic&amp;rdquo; BR/EDR and BLE secure
connection. The exploits are effective on any standard compliant Bluetooth
device regardless of software, hardware vendors and versions, Bluetooth
version, supported security features, or security mode in use. As a result of
our disclosure in 2019, the Bluetooth SIG amended the standard by requiring 7
bytes of entropy as minimum entropy value for Bluetooth BR/EDR (as for BLE).
Only some vendors, including Intel, Google, Apple, and Microsoft, patched
a subset of their products to address the KNOB attack, and in the talk,
we describe some of those patches and why they are not effective. We also
describe why the majority of low-end devices that we tested remains vulnerable
to the 1-byte entropy downgrade. We conclude the talk describing the main
lessons that we learned while finding and exploiting Bluetooth standard
compliant 0 days.&lt;/p&gt;
&lt;p&gt;The KNOB attacks were identified, investigated, and demonstrated by Daniele
Antonioli, Nils Tippenhauer, and Kasper Rasmussen, more information at
&lt;a href=&#34;https://knobattack.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://knobattack.com&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ZVSbF11uxuk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Bluetooth blues: KNOB Attack Explained</title>
      <link>https://francozappa.github.io/talk/bluetooth-blues-knob-attack-explained/</link>
      <pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://francozappa.github.io/talk/bluetooth-blues-knob-attack-explained/</guid>
      <description>&lt;p&gt;In this interview we present the KNOB attack as part of the
CyberWire&amp;rsquo;s Research Saturday session.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/_XvjXZCc1DU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Alternative &lt;a href=&#34;https://thecyberwire.com/podcasts/research-saturday/102/notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
